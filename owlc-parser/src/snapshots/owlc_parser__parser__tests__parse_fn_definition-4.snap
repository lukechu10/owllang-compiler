---
source: owlc-parser/src/parser.rs
expression: "parse_str_as_unit(\"fn test() {\n                let tmp = 1;\n                return tmp;\n            }\")"
---
CompilationUnit {
    entry_file_name: "<test>",
    functions: [
        Stmt {
            kind: Fn {
                proto: FnProto {
                    args: [],
                    iden: "test",
                },
                body: Some(
                    Block {
                        stmts: [
                            Stmt {
                                kind: Let {
                                    iden: "tmp",
                                    initializer: Expr {
                                        kind: Literal(
                                            1,
                                        ),
                                        span: Span {
                                            lo: BytePos(
                                                38,
                                            ),
                                            hi: BytePos(
                                                39,
                                            ),
                                        },
                                    },
                                },
                                span: Span {
                                    lo: BytePos(
                                        28,
                                    ),
                                    hi: BytePos(
                                        39,
                                    ),
                                },
                            },
                            Stmt {
                                kind: Return {
                                    value: Expr {
                                        kind: Identifier(
                                            "tmp",
                                        ),
                                        span: Span {
                                            lo: BytePos(
                                                64,
                                            ),
                                            hi: BytePos(
                                                67,
                                            ),
                                        },
                                    },
                                },
                                span: Span {
                                    lo: BytePos(
                                        57,
                                    ),
                                    hi: BytePos(
                                        67,
                                    ),
                                },
                            },
                        ],
                    },
                ),
            },
            span: Span {
                lo: BytePos(
                    0,
                ),
                hi: BytePos(
                    82,
                ),
            },
        },
    ],
}
