---
source: owlc-parser/src/parser.rs
expression: "parse_str_as_unit(\"fn test() {\n                let i = 0;\n                while i < 10 {\n                    println(i);\n                    i = i + 1;\n                }\n                return i;\n            }\")"
---
CompilationUnit {
    entry_file_name: "<test>",
    functions: [
        Stmt {
            kind: Fn {
                proto: FnProto {
                    args: [],
                    iden: "test",
                },
                body: Some(
                    Block {
                        stmts: [
                            Stmt {
                                kind: Let {
                                    iden: "i",
                                    initializer: Expr {
                                        kind: Literal(
                                            0,
                                        ),
                                        span: Span {
                                            lo: BytePos(
                                                36,
                                            ),
                                            hi: BytePos(
                                                37,
                                            ),
                                        },
                                    },
                                },
                                span: Span {
                                    lo: BytePos(
                                        28,
                                    ),
                                    hi: BytePos(
                                        37,
                                    ),
                                },
                            },
                            Stmt {
                                kind: While {
                                    condition: Expr {
                                        kind: BinaryExpr {
                                            lhs: Expr {
                                                kind: Identifier(
                                                    "i",
                                                ),
                                                span: Span {
                                                    lo: BytePos(
                                                        61,
                                                    ),
                                                    hi: BytePos(
                                                        63,
                                                    ),
                                                },
                                            },
                                            rhs: Expr {
                                                kind: Literal(
                                                    10,
                                                ),
                                                span: Span {
                                                    lo: BytePos(
                                                        65,
                                                    ),
                                                    hi: BytePos(
                                                        68,
                                                    ),
                                                },
                                            },
                                            op_type: OpLessThan,
                                        },
                                        span: Span {
                                            lo: BytePos(
                                                61,
                                            ),
                                            hi: BytePos(
                                                68,
                                            ),
                                        },
                                    },
                                    body: Block {
                                        stmts: [
                                            Stmt {
                                                kind: ExprSemi {
                                                    expr: Expr {
                                                        kind: FuncCall {
                                                            callee: "println",
                                                            args: [
                                                                Expr {
                                                                    kind: Identifier(
                                                                        "i",
                                                                    ),
                                                                    span: Span {
                                                                        lo: BytePos(
                                                                            98,
                                                                        ),
                                                                        hi: BytePos(
                                                                            99,
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        span: Span {
                                                            lo: BytePos(
                                                                90,
                                                            ),
                                                            hi: BytePos(
                                                                100,
                                                            ),
                                                        },
                                                    },
                                                },
                                                span: Span {
                                                    lo: BytePos(
                                                        90,
                                                    ),
                                                    hi: BytePos(
                                                        122,
                                                    ),
                                                },
                                            },
                                            Stmt {
                                                kind: ExprSemi {
                                                    expr: Expr {
                                                        kind: BinaryExpr {
                                                            lhs: Expr {
                                                                kind: Identifier(
                                                                    "i",
                                                                ),
                                                                span: Span {
                                                                    lo: BytePos(
                                                                        122,
                                                                    ),
                                                                    hi: BytePos(
                                                                        124,
                                                                    ),
                                                                },
                                                            },
                                                            rhs: Expr {
                                                                kind: BinaryExpr {
                                                                    lhs: Expr {
                                                                        kind: Identifier(
                                                                            "i",
                                                                        ),
                                                                        span: Span {
                                                                            lo: BytePos(
                                                                                126,
                                                                            ),
                                                                            hi: BytePos(
                                                                                128,
                                                                            ),
                                                                        },
                                                                    },
                                                                    rhs: Expr {
                                                                        kind: Literal(
                                                                            1,
                                                                        ),
                                                                        span: Span {
                                                                            lo: BytePos(
                                                                                130,
                                                                            ),
                                                                            hi: BytePos(
                                                                                131,
                                                                            ),
                                                                        },
                                                                    },
                                                                    op_type: OpPlus,
                                                                },
                                                                span: Span {
                                                                    lo: BytePos(
                                                                        126,
                                                                    ),
                                                                    hi: BytePos(
                                                                        131,
                                                                    ),
                                                                },
                                                            },
                                                            op_type: OpEquals,
                                                        },
                                                        span: Span {
                                                            lo: BytePos(
                                                                122,
                                                            ),
                                                            hi: BytePos(
                                                                131,
                                                            ),
                                                        },
                                                    },
                                                },
                                                span: Span {
                                                    lo: BytePos(
                                                        122,
                                                    ),
                                                    hi: BytePos(
                                                        149,
                                                    ),
                                                },
                                            },
                                        ],
                                    },
                                },
                                span: Span {
                                    lo: BytePos(
                                        55,
                                    ),
                                    hi: BytePos(
                                        167,
                                    ),
                                },
                            },
                            Stmt {
                                kind: Return {
                                    value: Expr {
                                        kind: Identifier(
                                            "i",
                                        ),
                                        span: Span {
                                            lo: BytePos(
                                                174,
                                            ),
                                            hi: BytePos(
                                                175,
                                            ),
                                        },
                                    },
                                },
                                span: Span {
                                    lo: BytePos(
                                        167,
                                    ),
                                    hi: BytePos(
                                        175,
                                    ),
                                },
                            },
                        ],
                    },
                ),
            },
            span: Span {
                lo: BytePos(
                    0,
                ),
                hi: BytePos(
                    190,
                ),
            },
        },
    ],
}
