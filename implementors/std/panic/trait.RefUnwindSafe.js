(function() {var implementors = {};
implementors["owlc_error"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ErrorReporter","synthetic":true,"types":[]}];
implementors["owlc_lexer"] = [{"text":"impl&lt;'a&gt; !RefUnwindSafe for Lexer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TokenKind","synthetic":true,"types":[]}];
implementors["owlc_llvm"] = [{"text":"impl RefUnwindSafe for LlvmCodeGenVisitor","synthetic":true,"types":[]}];
implementors["owlc_parser"] = [{"text":"impl RefUnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompilationUnit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FnProto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stmt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StmtKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Parser&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["owlc_passes"] = [{"text":"impl&lt;'a&gt; !RefUnwindSafe for MainFunctionVisitor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SymbolTable","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ResolverVisitor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scope","synthetic":true,"types":[]}];
implementors["owlc_source"] = [{"text":"impl !RefUnwindSafe for SourceFile","synthetic":true,"types":[]}];
implementors["owlc_span"] = [{"text":"impl RefUnwindSafe for BytePos","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SourceFile","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()