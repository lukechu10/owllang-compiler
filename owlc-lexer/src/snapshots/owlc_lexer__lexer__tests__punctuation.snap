---
source: owlc-lexer/src/lexer.rs
expression: "lex_str(\"+ - * / % . ( ) { } , ;\")"
---
[
    Token {
        kind: OpPlus,
        loc: Span {
            lo: BytePos(
                0,
            ),
            hi: BytePos(
                0,
            ),
        },
    },
    Token {
        kind: OpMinus,
        loc: Span {
            lo: BytePos(
                2,
            ),
            hi: BytePos(
                2,
            ),
        },
    },
    Token {
        kind: OpAsterisk,
        loc: Span {
            lo: BytePos(
                4,
            ),
            hi: BytePos(
                4,
            ),
        },
    },
    Token {
        kind: OpSlash,
        loc: Span {
            lo: BytePos(
                6,
            ),
            hi: BytePos(
                6,
            ),
        },
    },
    Token {
        kind: OpPercent,
        loc: Span {
            lo: BytePos(
                8,
            ),
            hi: BytePos(
                8,
            ),
        },
    },
    Token {
        kind: OpDot,
        loc: Span {
            lo: BytePos(
                10,
            ),
            hi: BytePos(
                10,
            ),
        },
    },
    Token {
        kind: PuncOpenParen,
        loc: Span {
            lo: BytePos(
                12,
            ),
            hi: BytePos(
                12,
            ),
        },
    },
    Token {
        kind: PuncCloseParen,
        loc: Span {
            lo: BytePos(
                14,
            ),
            hi: BytePos(
                14,
            ),
        },
    },
    Token {
        kind: PuncOpenBrace,
        loc: Span {
            lo: BytePos(
                16,
            ),
            hi: BytePos(
                16,
            ),
        },
    },
    Token {
        kind: PuncCloseBrace,
        loc: Span {
            lo: BytePos(
                18,
            ),
            hi: BytePos(
                18,
            ),
        },
    },
    Token {
        kind: PuncComma,
        loc: Span {
            lo: BytePos(
                20,
            ),
            hi: BytePos(
                20,
            ),
        },
    },
    Token {
        kind: PuncSemi,
        loc: Span {
            lo: BytePos(
                22,
            ),
            hi: BytePos(
                22,
            ),
        },
    },
]
