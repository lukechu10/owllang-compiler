---
source: owlc-lexer/src/lexer.rs
expression: "lex_str(\"+ - * / % . ( ) { } [ ] , ;\")"
---
[
    Token {
        kind: OpPlus,
        loc: Span {
            lo: BytePos(
                0,
            ),
            hi: BytePos(
                1,
            ),
        },
    },
    Token {
        kind: OpMinus,
        loc: Span {
            lo: BytePos(
                2,
            ),
            hi: BytePos(
                3,
            ),
        },
    },
    Token {
        kind: OpAsterisk,
        loc: Span {
            lo: BytePos(
                4,
            ),
            hi: BytePos(
                5,
            ),
        },
    },
    Token {
        kind: OpSlash,
        loc: Span {
            lo: BytePos(
                6,
            ),
            hi: BytePos(
                7,
            ),
        },
    },
    Token {
        kind: OpPercent,
        loc: Span {
            lo: BytePos(
                8,
            ),
            hi: BytePos(
                9,
            ),
        },
    },
    Token {
        kind: OpDot,
        loc: Span {
            lo: BytePos(
                10,
            ),
            hi: BytePos(
                11,
            ),
        },
    },
    Token {
        kind: PuncOpenParen,
        loc: Span {
            lo: BytePos(
                12,
            ),
            hi: BytePos(
                13,
            ),
        },
    },
    Token {
        kind: PuncCloseParen,
        loc: Span {
            lo: BytePos(
                14,
            ),
            hi: BytePos(
                15,
            ),
        },
    },
    Token {
        kind: PuncOpenBrace,
        loc: Span {
            lo: BytePos(
                16,
            ),
            hi: BytePos(
                17,
            ),
        },
    },
    Token {
        kind: PuncCloseBrace,
        loc: Span {
            lo: BytePos(
                18,
            ),
            hi: BytePos(
                19,
            ),
        },
    },
    Token {
        kind: PuncOpenSquare,
        loc: Span {
            lo: BytePos(
                20,
            ),
            hi: BytePos(
                21,
            ),
        },
    },
    Token {
        kind: PuncCloseSquare,
        loc: Span {
            lo: BytePos(
                22,
            ),
            hi: BytePos(
                23,
            ),
        },
    },
    Token {
        kind: PuncComma,
        loc: Span {
            lo: BytePos(
                24,
            ),
            hi: BytePos(
                25,
            ),
        },
    },
    Token {
        kind: PuncSemi,
        loc: Span {
            lo: BytePos(
                26,
            ),
            hi: BytePos(
                27,
            ),
        },
    },
]
